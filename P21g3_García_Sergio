/* ColocaNumeros0a99Azar
Presenta los números [0..99] pero en lugar de colocarlos de forma consecutiva, 
obtiene 200 números aleatorios [0..99] y los coloca ada uno en su lugar correspondiente.
Como faltarán números por colocar, hacer que el usuario los ponga a mano 
en color blanco con fondo rojo. Acaba cuando escriba el valor 0.
   		//-- Cambiar a Blanco sobre Rojo
     	Console.BackgroundColor = ConsoleColor.Red;
   		Console.ForegroundColor = ConsoleColor.White;
*/


using System;

class Program
{
    static void Main(string[] args)
    {
        ColocaNums0a99Azar();
        int num;
        do
        {
            Console.SetCursorPosition(10, 24);
            num = CapturaEntero("Dime el número a colocar: ", 0, 99);
            // Establezco el color blanco sobre rojo
            Console.BackgroundColor = ConsoleColor.Red;
            Console.ForegroundColor = ConsoleColor.White;
            // Escribo el número en su posición
            ColocaElNumero(num);
            // Establezco el color por defecto;
            Console.ResetColor();
            // Esa línea equivale a poner los colores a explícitamente
            //Console.BackgroundColor = ConsoleColor.DarkBlue;
            //Console.ForegroundColor = ConsoleColor.Yellow;

            Console.SetCursorPosition(10, 24);
            Console.Write("                                       ");

        } while (num != 0);



        Console.Write("\n\n\n\tPulsa tecla para salir");
        Console.ReadKey();
    }

    private static void ColocaNums0a99Azar()
    {
        Random azar = new Random();
        int num;
        for (int i = 0; i < 200; i++)
        {
            num = azar.Next(100);
            ColocaElNumero(num);
        }
    }

    private static void ColocaElNumero(int num)
    {
        // Posición de columna = 5 * <valor de la unidad de num> (+ 10 desplazamiento fijo a la derecha)
        int columna = 3 + 6 * (num % 10);
        // Posición de fila = 2 * <valor de la decena de num> (+ 1 desplazamiento fijo hacia abajo)
        int fila = 4 + 2 * (num / 10);

        // Colocamos el culsor en la posición calculada y escribimos el número
        Console.SetCursorPosition(columna, fila);
        Console.Write(num.ToString("00"));
        //Emitimos un beep de frecuencia proporcional a num y 10ms de duración
        //Console.Beep(200 + 40 * num, 100);
    }

    static int CapturaEntero(string texto, int min, int max)
    {
        int num;
        bool esCorrecto;
        do
        {
            Console.Write(" {0} [{1}..{2}]: ", texto, min, max);
            esCorrecto = Int32.TryParse(Console.ReadLine(), out num);
            if (!esCorrecto)
                Console.WriteLine("\n\t ** ERROR de FORMATO **");
            else if (num < min || num > max)
            {
                Console.WriteLine(" ** ERROR: VALOR FUERA DE RANGO **");
                esCorrecto = false;
            }
        } while (!esCorrecto);

        return num;
    }

}
